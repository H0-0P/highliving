<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.highliving.dao.CollectionsMapper" >
  <resultMap id="BaseResultMap" type="com.highliving.pojo.Collections" >
    <id column="collectId" property="collectid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="goodId" property="goodid" jdbcType="VARCHAR" />
    <collection property="goods" ofType="com.highliving.pojo.Goods">
    	 <id column="goodId" property="goodid" jdbcType="VARCHAR" />
	    <result column="goodTypeId" property="goodtypeid" jdbcType="INTEGER" />
	    <result column="brandId" property="brandid" jdbcType="INTEGER" />
	    <result column="userId" property="userid" jdbcType="INTEGER" />
	    <result column="goodName" property="goodname" jdbcType="VARCHAR" />
	    <result column="goodPrice" property="goodprice" jdbcType="DECIMAL" />
	    <result column="goodStatus" property="goodstatus" jdbcType="BIT" />
	    <result column="isValid" property="isvalid" jdbcType="BIT" />
	    <result column="goodCollect" property="goodcollect" jdbcType="INTEGER" />
	    <result column="defaultPic" property="defaultpic" jdbcType="VARCHAR" />
	    <result column="goodStore" property="goodstore" jdbcType="INTEGER" />
	    <result column="goodDiscount" property="gooddiscount" jdbcType="DECIMAL" />
	    <result column="goodCreateTime" property="goodcreatetime" jdbcType="TIMESTAMP" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    collectId, userId, goodId
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from collections
    where collectId = #{collectid,jdbcType=INTEGER}
  </select>
  <!-- 根据userid和商品Id删除收藏 -->
  
  <delete id="deletecollection" parameterType="java.lang.Integer" >
    delete from collections
    where userId = #{0}
    	  and goodId = #{1}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collections
    where collectId = #{collectid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.highliving.pojo.Collections" >
    insert into collections (collectId, userId, goodId
      )
    values (#{collectid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{goodid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.highliving.pojo.Collections" >
    insert into collections
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectid != null" >
        collectId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="goodid != null" >
        goodId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectid != null" >
        #{collectid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        #{goodid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.highliving.pojo.Collections" >
    update collections
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        goodId = #{goodid,jdbcType=VARCHAR},
      </if>
    </set>
    where collectId = #{collectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.highliving.pojo.Collections" >
    update collections
    set userId = #{userid,jdbcType=INTEGER},
      goodId = #{goodid,jdbcType=VARCHAR}
    where collectId = #{collectid,jdbcType=INTEGER}
  </update>
    <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select collectId, a.goodId, goodName, goodPrice, defaultPic from collections a left join goods b on a.goodId = b.goodId where a.userId = #{userid,jdbcType=INTEGER}
  </select>
  <select id="findCountByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
  	select count(collectId) from collections where userId=#{userid,jdbcType=INTEGER}
  </select>
</mapper>